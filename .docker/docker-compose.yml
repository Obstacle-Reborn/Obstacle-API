name: records
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
    ports:
      - "80:80"
    environment:
      NGINX_HOST: ${RECORDS_API_HOST}
      RECORDS_API_PORT: ${RECORDS_API_PORT}
      WEBSITE_PORT: ${WEBSITE_PORT}
    networks:
      - nginx-side
    depends_on:
      - backend
      - website
      - adminer

  website:
    build:
      context: ../
      dockerfile: ./.docker/website/Dockerfile
      args:
        WEBSITE_PORT: ${WEBSITE_PORT}
    environment:
      NODE_ENV: development
      WEBSITE_PORT: ${WEBSITE_PORT}
    expose:
      - "${WEBSITE_PORT}"
    networks:
      - nginx-side
    depends_on:
      - backend

  backend:
    build:
      context: ../
      target: development
      dockerfile: ./.docker/backend/Dockerfile
      args:
        RECORDS_API_PORT: ${RECORDS_API_PORT}
    environment:
      RECORDS_API_PORT: ${RECORDS_API_PORT}
      RECORDS_API_TOKEN_TTL: ${RECORDS_API_TOKEN_TTL}
      RECORDS_API_HOST: ${RECORDS_API_HOST}
      DATABASE_URL: /run/secrets/db_url
      REDIS_URL: /run/secrets/redis_url
      GQL_ENDPOINT: /api/graphql
    expose:
      - "${RECORDS_API_PORT}"
    networks:
      - redis-side
      - db-side
      - nginx-side
    volumes:
      - ../game_api/src/:/records/src/
      - backend-cache:/records/target
    depends_on:
      - db
      - redis
    secrets:
      - db_url
      - redis_url

  db:
    image: mariadb
    restart: always
    environment:
      MARIADB_DATABASE_FILE: /run/secrets/db_db
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/db_root_pw
      MARIADB_USER_FILE: /run/secrets/db_user
      MARIADB_PASSWORD_FILE: /run/secrets/db_pw
    networks:
      - db-side
    expose:
      - "3306"
    secrets:
      - db_db
      - db_root_pw
      - db_user
      - db_pw
    volumes:
      - ./db/entrypoint:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    networks:
      - db-side
      - nginx-side
    expose:
      - "8080"

  redis:
    image: redis:alpine
    restart: always
    networks:
      - redis-side
    expose:
      - "6379"

networks:
  redis-side: {}
  db-side: {}
  nginx-side: {}

volumes:
  backend-cache: {}
  db_data: {}

secrets:
  db_url:
    file: ./backend/db_url
  redis_url:
    file: ./backend/redis_url
  db_db:
    file: ./db/db_db
  db_root_pw:
    file: ./db/db_root_pw
  db_user:
    file: ./db/db_user
  db_pw:
    file: ./db/db_pw
  db_backup_user:
    file: ./db/db_backup_user
  db_backup_pw:
    file: ./db/db_backup_pw
